<?php
/**
 * This file is part of the <Gedmo> project.
 *
 * @category   Gedmo_Repositories
 * @package    Repository
 * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
 * @since 2012-07-31
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace PiApp\GedmoBundle\Repository;

use Doctrine\ORM\EntityRepository;
use BootStrap\TranslationBundle\Repository\TranslationRepository;

/**
 * Corporation Repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * 
 * @category   Gedmo_Repositories
 * @package    Repository
 * 
 * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
 */
class CorporationRepository extends TranslationRepository
{
	/**
	 * Gets the profil of a user.
	 *
	 * @return array\entity
	 * @access public
	 *
	 * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
	 * @since 2013-01-11
	 */	
	public function findOneByUser($user_id, $locale, $result = "object", $INNER_JOIN = false)
	{
		$em = $this->getEntityManager()->createQueryBuilder()
		->select('p')
		->from($this->_entityName,'p')
		->leftJoin('p.user', 'u')
		->andwhere('p.enabled = :enabled')
		->andWhere('p.user = :userID')
		->andwhere('u.enabled = :enabled')
		->setParameters(array(
				'enabled'	=> 1,
				'userID'	=> $user_id,
		));
		$query = $this->setTranslatableHints($em->getQuery(), $locale, $INNER_JOIN);
	
		return $query->getOneOrNullResult();
	}	
}