<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class PiAppAdminBundleEntityWidgetProxy extends \PiApp\AdminBundle\Entity\Widget implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setPlugin($plugin)
    {
        $this->__load();
        return parent::setPlugin($plugin);
    }

    public function getPlugin()
    {
        $this->__load();
        return parent::getPlugin();
    }

    public function setAction($action)
    {
        $this->__load();
        return parent::setAction($action);
    }

    public function getAction()
    {
        $this->__load();
        return parent::getAction();
    }

    public function setConfigCssClass($configCssClass)
    {
        $this->__load();
        return parent::setConfigCssClass($configCssClass);
    }

    public function getConfigCssClass()
    {
        $this->__load();
        return parent::getConfigCssClass();
    }

    public function setConfigXml($configXml)
    {
        $this->__load();
        return parent::setConfigXml($configXml);
    }

    public function getConfigXml()
    {
        $this->__load();
        return parent::getConfigXml();
    }

    public function setCacheable($cacheable)
    {
        $this->__load();
        return parent::setCacheable($cacheable);
    }

    public function getCacheable()
    {
        $this->__load();
        return parent::getCacheable();
    }

    public function setPublic($public)
    {
        $this->__load();
        return parent::setPublic($public);
    }

    public function getPublic()
    {
        $this->__load();
        return parent::getPublic();
    }

    public function setLifetime($lifetime)
    {
        $this->__load();
        return parent::setLifetime($lifetime);
    }

    public function getLifetime()
    {
        $this->__load();
        return parent::getLifetime();
    }

    public function setPosition($position)
    {
        $this->__load();
        return parent::setPosition($position);
    }

    public function getPosition()
    {
        $this->__load();
        return parent::getPosition();
    }

    public function setBlock(\PiApp\AdminBundle\Entity\Block $block)
    {
        $this->__load();
        return parent::setBlock($block);
    }

    public function getBlock()
    {
        $this->__load();
        return parent::getBlock();
    }

    public function setTranslations(\Doctrine\Common\Collections\ArrayCollection $translations)
    {
        $this->__load();
        return parent::setTranslations($translations);
    }

    public function addTranslation(\PiApp\AdminBundle\Entity\TranslationWidget $translation)
    {
        $this->__load();
        return parent::addTranslation($translation);
    }

    public function getTranslations()
    {
        $this->__load();
        return parent::getTranslations();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function setArchiveAt($archiveAt)
    {
        $this->__load();
        return parent::setArchiveAt($archiveAt);
    }

    public function getArchiveAt()
    {
        $this->__load();
        return parent::getArchiveAt();
    }

    public function setEnabled($enabled)
    {
        $this->__load();
        return parent::setEnabled($enabled);
    }

    public function getEnabled()
    {
        $this->__load();
        return parent::getEnabled();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'block', 'translations', 'plugin', 'action', 'cacheable', 'public', 'lifetime', 'configCssClass', 'configXml', 'created_at', 'updated_at', 'archive_at', 'enabled', 'position');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}