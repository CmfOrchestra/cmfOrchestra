<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class PiAppGedmoBundleEntitySliderProxy extends \PiApp\GedmoBundle\Entity\Slider implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function setUpdatedValue()
    {
        $this->__load();
        return parent::setUpdatedValue();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setPage($page)
    {
        $this->__load();
        return parent::setPage($page);
    }

    public function getPage()
    {
        $this->__load();
        return parent::getPage();
    }

    public function setPagetitle($title)
    {
        $this->__load();
        return parent::setPagetitle($title);
    }

    public function getPagetitle()
    {
        $this->__load();
        return parent::getPagetitle();
    }

    public function setPagecssclass($className)
    {
        $this->__load();
        return parent::setPagecssclass($className);
    }

    public function getPagecssclass()
    {
        $this->__load();
        return parent::getPagecssclass();
    }

    public function setCategory($category)
    {
        $this->__load();
        return parent::setCategory($category);
    }

    public function getCategory()
    {
        $this->__load();
        return parent::getCategory();
    }

    public function setCategoryother($category)
    {
        $this->__load();
        return parent::setCategoryother($category);
    }

    public function getCategoryother()
    {
        $this->__load();
        return parent::getCategoryother();
    }

    public function setCssClass($CssClass)
    {
        $this->__load();
        return parent::setCssClass($CssClass);
    }

    public function getCssClass()
    {
        $this->__load();
        return parent::getCssClass();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function getSubtitle()
    {
        $this->__load();
        return parent::getSubtitle();
    }

    public function setSubtitle($title)
    {
        $this->__load();
        return parent::setSubtitle($title);
    }

    public function setDescriptifleft($descriptif)
    {
        $this->__load();
        return parent::setDescriptifleft($descriptif);
    }

    public function getDescriptifleft()
    {
        $this->__load();
        return parent::getDescriptifleft();
    }

    public function setDescriptifright($descriptif)
    {
        $this->__load();
        return parent::setDescriptifright($descriptif);
    }

    public function getDescriptifright()
    {
        $this->__load();
        return parent::getDescriptifright();
    }

    public function setMedia($media)
    {
        $this->__load();
        return parent::setMedia($media);
    }

    public function getMedia()
    {
        $this->__load();
        return parent::getMedia();
    }

    public function getSlug()
    {
        $this->__load();
        return parent::getSlug();
    }

    public function setMetaKeywords($metaKeywords)
    {
        $this->__load();
        return parent::setMetaKeywords($metaKeywords);
    }

    public function getMetaKeywords()
    {
        $this->__load();
        return parent::getMetaKeywords();
    }

    public function setMetaDescription($metaDescription)
    {
        $this->__load();
        return parent::setMetaDescription($metaDescription);
    }

    public function getMetaDescription()
    {
        $this->__load();
        return parent::getMetaDescription();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function setPublishedAt($publishedAt)
    {
        $this->__load();
        return parent::setPublishedAt($publishedAt);
    }

    public function getPublishedAt()
    {
        $this->__load();
        return parent::getPublishedAt();
    }

    public function setArchiveAt($archiveAt)
    {
        $this->__load();
        return parent::setArchiveAt($archiveAt);
    }

    public function getArchiveAt()
    {
        $this->__load();
        return parent::getArchiveAt();
    }

    public function setEnabled($enabled)
    {
        $this->__load();
        return parent::setEnabled($enabled);
    }

    public function getEnabled()
    {
        $this->__load();
        return parent::getEnabled();
    }

    public function setPosition($position)
    {
        $this->__load();
        return parent::setPosition($position);
    }

    public function getPosition()
    {
        $this->__load();
        return parent::getPosition();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'translations', 'id', 'category', 'categoryother', 'CssClass', 'title', 'subtitle', 'descriptifleft', 'descriptifright', 'page', 'pagetitle', 'pagecssclass', 'media', 'slug', 'meta_keywords', 'meta_description', 'created_at', 'updated_at', 'published_at', 'archive_at', 'enabled', 'position');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}