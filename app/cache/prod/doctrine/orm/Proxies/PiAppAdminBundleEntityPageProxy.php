<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class PiAppAdminBundleEntityPageProxy extends \PiApp\AdminBundle\Entity\Page implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setCacheable($cacheable)
    {
        $this->__load();
        return parent::setCacheable($cacheable);
    }

    public function getCacheable()
    {
        $this->__load();
        return parent::getCacheable();
    }

    public function setPublic($public)
    {
        $this->__load();
        return parent::setPublic($public);
    }

    public function getPublic()
    {
        $this->__load();
        return parent::getPublic();
    }

    public function setLifetime($lifetime)
    {
        $this->__load();
        return parent::setLifetime($lifetime);
    }

    public function getLifetime()
    {
        $this->__load();
        return parent::getLifetime();
    }

    public function setRouteName($routeName)
    {
        $this->__load();
        return parent::setRouteName($routeName);
    }

    public function getRouteName()
    {
        $this->__load();
        return parent::getRouteName();
    }

    public function setUrl($url)
    {
        $this->__load();
        return parent::setUrl($url);
    }

    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function setMetaContentType($metaContentType)
    {
        $this->__load();
        return parent::setMetaContentType($metaContentType);
    }

    public function getMetaContentType()
    {
        $this->__load();
        return parent::getMetaContentType();
    }

    public function setUser(\BootStrap\UserBundle\Entity\User $user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setTranslations(\Doctrine\Common\Collections\ArrayCollection $translations)
    {
        $this->__load();
        return parent::setTranslations($translations);
    }

    public function addTranslation(\PiApp\AdminBundle\Entity\TranslationPage $translation)
    {
        $this->__load();
        return parent::addTranslation($translation);
    }

    public function removeTranslation(\PiApp\AdminBundle\Entity\TranslationPage $translation)
    {
        $this->__load();
        return parent::removeTranslation($translation);
    }

    public function getTranslations()
    {
        $this->__load();
        return parent::getTranslations();
    }

    public function getTranslationByLocale($locale)
    {
        $this->__load();
        return parent::getTranslationByLocale($locale);
    }

    public function addBlock(\PiApp\AdminBundle\Entity\Block $block)
    {
        $this->__load();
        return parent::addBlock($block);
    }

    public function getBlocks()
    {
        $this->__load();
        return parent::getBlocks();
    }

    public function setRubrique(\PiApp\AdminBundle\Entity\Rubrique $rubrique)
    {
        $this->__load();
        return parent::setRubrique($rubrique);
    }

    public function getRubrique()
    {
        $this->__load();
        return parent::getRubrique();
    }

    public function setLayout(\PiApp\AdminBundle\Entity\Layout $layout)
    {
        $this->__load();
        return parent::setLayout($layout);
    }

    public function getLayout()
    {
        $this->__load();
        return parent::getLayout();
    }

    public function addPageCss(\PiApp\AdminBundle\Entity\Page $Page)
    {
        $this->__load();
        return parent::addPageCss($Page);
    }

    public function setPageCss($Page)
    {
        $this->__load();
        return parent::setPageCss($Page);
    }

    public function getPageCss()
    {
        $this->__load();
        return parent::getPageCss();
    }

    public function addPageJs(\PiApp\AdminBundle\Entity\Page $Page)
    {
        $this->__load();
        return parent::addPageJs($Page);
    }

    public function setPageJs($Page)
    {
        $this->__load();
        return parent::setPageJs($Page);
    }

    public function getPageJs()
    {
        $this->__load();
        return parent::getPageJs();
    }

    public function addKeyWord(\PiApp\AdminBundle\Entity\KeyWord $keywords)
    {
        $this->__load();
        return parent::addKeyWord($keywords);
    }

    public function setKeywords($keyword)
    {
        $this->__load();
        return parent::setKeywords($keyword);
    }

    public function getKeywords()
    {
        $this->__load();
        return parent::getKeywords();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function setArchiveAt($archiveAt)
    {
        $this->__load();
        return parent::setArchiveAt($archiveAt);
    }

    public function getArchiveAt()
    {
        $this->__load();
        return parent::getArchiveAt();
    }

    public function setEnabled($enabled)
    {
        $this->__load();
        return parent::setEnabled($enabled);
    }

    public function getEnabled()
    {
        $this->__load();
        return parent::getEnabled();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'user', 'translations', 'blocks', 'rubrique', 'layout', 'keywords', 'page_css', 'page_js', 'cacheable', 'public', 'lifetime', 'route_name', 'url', 'meta_content_type', 'created_at', 'updated_at', 'archive_at', 'enabled');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}